{"version":3,"sources":["evaluator/objects/list.js","evaluator/objects/procedure.js","evaluator/objects/void.js","evaluator/config/primitiveProcedures.js","evaluator/utils/equals.js","evaluator/utils/math.js","evaluator/utils/display.js","evaluator/environment.js","evaluator/utils/reduce.js","evaluator/objects/boolean.js","evaluator/stringToAst.js","evaluator/expressions/number.js","evaluator/expressions/variable.js","evaluator/expressions/application.js","evaluator/evaluate.js","evaluator/expressions/quote.js","evaluator/expressions/string.js","evaluator/expressions/assignment.js","evaluator/expressions/definition.js","evaluator/expressions/if.js","evaluator/expressions/lambda.js","evaluator/expressions/begin.js","evaluator/index.js","evaluator/config/setupEnvironment.js","Wrapper.js","App.js","index.js"],"names":["theEmptyList","Symbol","cons","x","y","pair","selector","isPair","procedureParams","proc","procedureBody","procedureEnvironment","isCompound","isPrimitive","applyPrimiriveProcedure","args","primitiveImplementation","toString","values","Array","isArray","map","val","join","procs","a","b","length","Error","reduce","min","subs","list","head","tail","_","l","obj","console","log","Void","primitiveProcedureNames","primitiveProcedureObjects","theEmptyEnvironment","firstFrame","env","frame","enclosingEnvironment","closure","makeFrame","variables","iteratee","initial","iter","acc","items","index","some","arr","heads","tails","collections","variable","value","extendEnvironment","baseEnv","lookupVariableValue","Object","prototype","hasOwnProperty","call","defineVariable","False","True","isTrue","isFalse","lookup","path","first","rest","pushAtPath","target","push","parseWord","word","Number","isNaN","isNumber","exp","evalNumber","isVariable","operator","operands","firstOperand","ops","evalSequence","seq","loop","evaluate","listOfValues","exps","expressionEvaluators","quote","string","setVariableValue","assignmentVariable","assignmentValue","define","definitionVariable","definitionValue","if","predicate","ifPredicate","ifConsequent","ifAlternative","lambda","params","body","makeProcedure","lambdaParameters","begin","getEvaluator","type","evaluator","f","apply","initialEnvironment","setupEnvironment","run","code","symbols","slice","state","wordCounter","parsed","symbol","pop","stringToAst","options","selectOnLineNumbers","useStyles","makeStyles","theme","header","height","backgroundColor","palette","primary","main","runButton","marginRight","spacing","display","ide","boxSizing","minWidth","borderRight","padding","output","footer","Wrapper","classes","useState","setCode","setOutput","width","outputSize","editorRef","useRef","enabledResize","useMemo","right","editorDidMount","useCallback","editor","current","focus","adjustEditor","layout","onResizeOutput","debounce","onRunCode","e","message","useEffect","window","addEventListener","document","removeEventListener","AppBar","position","className","Toolbar","IconButton","edge","onClick","color","aria-label","Typography","variant","title","enable","maxWidth","defaultSize","onResize","language","onChange","customTheme","createMuiTheme","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.d305d959.chunk.js","sourcesContent":["export const theEmptyList = Symbol('THE_EMPTY_LIST');\n\nexport const cons = (x, y) => {\n  const pair = selector => selector(x, y);\n  pair.isPair = true;\n  return pair;\n};\n\nexport const isPair = pair => typeof pair === 'function' && pair.isPair;\n\nexport const car = pair => pair(x => x);\nexport const cdr = pair => pair((_, y) => y);\n\nexport const list = (...args) => {\n  if (args.length === 0) {\n    return theEmptyList;\n  }\n  const [head, ...tail] = args;\n  return cons(\n    head,\n    list(...tail),\n  );\n};\n\nexport const isEmptyList = l => l === theEmptyList;\n","export const makeProcedure = (params, body, env) => ([\n  'procedure',\n  params,\n  body,\n  // Thus we can have circular link for environment\n  // that contains this procedure.\n  () => env,\n]);\n\nexport const procedureParams = proc => proc[1];\nexport const procedureBody = proc => proc[2];\nexport const procedureEnvironment = proc => proc[3]();\n\nexport const isCompound = proc => proc[0] === 'procedure';\nexport const isPrimitive = proc => proc[0] === 'primitive';\n\nconst primitiveImplementation = proc => proc[1];\nexport const applyPrimiriveProcedure = (proc, args) => primitiveImplementation(proc)(...args);\n\nexport const toString = (values) => {\n  if (Array.isArray(values)) {\n    return `(${values.map(val => toString(val)).join(' ')})`;\n  }\n  return values;\n};\n","export default Symbol('<void>');\n","import {\n  add,\n  sub,\n  mul,\n  div,\n} from '../utils/math';\nimport {\n  list,\n  cons,\n  car,\n  cdr,\n  isEmptyList,\n} from '../objects/list';\nimport display from '../utils/display';\nimport { isEqual } from '../utils/equals';\n\nconst procs = [\n  ['=', isEqual],\n  ['+', add],\n  ['-', sub],\n  ['*', mul],\n  ['/', div],\n  ['list', list],\n  ['cons', cons],\n  ['car', car],\n  ['cdr', cdr],\n  ['null?', isEmptyList],\n  ['display', display],\n];\n\nexport const primitiveProcedureNames = () => procs.map(([name]) => name);\nexport const primitiveProcedureObjects = () => procs.map(([, obj]) => (['primitive', obj]));\n","export const isEqual = (a, b) => a === b;\n","export const add = (...args) => {\n  if (args.length < 2) {\n    throw new Error(\n      `Addition arrity mismatch.\n      Expected at least 2 arguments, but received ${args.length}`,\n    );\n  }\n  return args.reduce((a, b) => a + b, 0);\n};\n\nexport const sub = (...args) => {\n  if (args.length < 2) {\n    throw new Error(\n      `Substraction arrity mismatch.\n      Expected at least 2 arguments, but received ${args.length}`,\n    );\n  }\n  const [min, ...subs] = args;\n  return subs.reduce((a, b) => a - b, min);\n};\n\nexport const mul = (...args) => {\n  if (args.length < 2) {\n    throw new Error(\n      `Multiplication arrity mismatch.\n      Expected at least 2 arguments, but received ${args.length}`,\n    );\n  }\n  return args.reduce((a, b) => a * b, 1);\n};\n\nexport const div = (...args) => {\n  if (args.length !== 2) {\n    throw new Error(\n      `Division arrity mismatch.\n      Expected 2 arguments, but received ${args.length}`,\n    );\n  }\n  return args[0] / args[1];\n};\n","import {\n  isCompound,\n  procedureParams,\n  procedureBody,\n  toString,\n} from '../objects/procedure';\nimport Void from '../objects/void';\n\nexport default (obj) => {\n  if (isCompound(obj)) {\n    console.log(`\n      'compound-procedure',\n      arguments: ${toString(procedureParams(obj))},\n      body: ${toString(procedureBody(obj))},\n      '<procedure-env>',\n    `);\n    return Void;\n  }\n  console.log(obj);\n  return Void;\n};\n","import reduce from './utils/reduce';\nimport Void from './objects/void';\n\nexport const theEmptyEnvironment = Symbol('EMPTY_ENVIRONMENT');\n\nexport const makeEnvironment = (...frames) => {\n  if (frames.length === 0) {\n    return theEmptyEnvironment;\n  }\n  const [first, ...rest] = frames;\n  return {\n    frame: first,\n    closure: makeEnvironment(...rest),\n  };\n};\n\nconst firstFrame = env => env.frame;\nconst enclosingEnvironment = env => env.closure;\nexport const makeFrame = (variables, values) => reduce(\n  (acc, [variable, value]) => ({ ...acc, [variable]: value }),\n  {},\n  variables,\n  values,\n);\n\nexport const addBindingToFrame = (variable, value, frame) => {\n  // Don't have other way to do that correctly\n  // cause we actually need this frame to be the same one.\n  // eslint-disable-next-line no-param-reassign\n  frame[variable] = value;\n  return frame;\n};\n\nexport const extendEnvironment = (variables, values, baseEnv) => {\n  if (variables.length > values.length) {\n    throw new Error('Too few arguments supplied');\n  }\n  if (variables.length < values.length) {\n    throw new Error('Too many arguments supplied');\n  }\n\n  return {\n    frame: makeFrame(variables, values),\n    closure: baseEnv,\n  };\n};\n\n// lookupVariableValue\nexport const lookupVariableValue = (variable, env) => {\n  if (env === theEmptyEnvironment) {\n    throw new Error(`Unbound variable: ${variable}`);\n  }\n\n  const frame = firstFrame(env);\n  if (Object.prototype.hasOwnProperty.call(frame, variable)) {\n    return frame[variable];\n  }\n  return lookupVariableValue(variable, enclosingEnvironment(env));\n};\n\n// setVariableValue\nexport const setVariableValue = (variable, value, env) => {\n  if (env === theEmptyEnvironment) {\n    throw new Error(`Unbound variable SET-VARIABLE-VALUE!: ${variable}`);\n  }\n  const frame = firstFrame(env);\n  if (Object.prototype.hasOwnProperty.call(frame, variable)) {\n    frame[variable] = value;\n    return Void;\n  }\n  return setVariableValue(variable, value, enclosingEnvironment(env));\n};\n\n// defineVariable\nexport const defineVariable = (variable, value, env) => {\n  const frame = firstFrame(env);\n  frame[variable] = value;\n  return Void;\n};\n","// custom reduce for unlimited amount of collections\nexport default (iteratee, initial = [], ...collections) => {\n  const iter = (acc, items, index) => {\n    if (items.some(arr => arr.length === 0)) {\n      return acc;\n    }\n\n    const heads = items.map(([head]) => head);\n    const tails = items.map(([, ...tail]) => tail);\n    return iter(\n      iteratee(acc, heads, index),\n      tails,\n      index + 1,\n    );\n  };\n\n  return iter(initial, collections, 0);\n};\n","export const False = false;\nexport const True = true;\n\nexport const isFalse = x => x === False;\nexport const isTrue = x => !isFalse(x);\n","function lookup(arr, path) {\n  if (path.length === 0) {\n    return arr;\n  }\n  if (!Array.isArray(arr)) {\n    throw new Error(`Argument is not an array: LOOKUP. ${arr}`);\n  }\n  const [first, ...rest] = path;\n  return lookup(arr[first], rest);\n}\n\nfunction pushAtPath(arr, path, value) {\n  const target = lookup(arr, path);\n  if (!Array.isArray(target)) {\n    throw new Error(`Argument is not an array: PUSH_AT_PATH. ${arr}`);\n  }\n  target.push(value);\n}\n\nfunction parseWord(word) {\n  if (!Number.isNaN(Number(word))) {\n    return Number(word);\n  }\n  return word;\n}\n\nexport default function stringToAst(string) {\n  let symbols = string.slice();\n  let word = '';\n  // states: idle string comment word quote\n  let state = 'idle';\n  let wordCounter = 1;\n  const path = [];\n  const parsed = ['begin'];\n\n  while (symbols.length !== 0) {\n    const [symbol] = symbols;\n    // console.log(symbols, path, parsed, word, wordCounter, state);\n\n    switch (state) {\n      case 'idle': {\n        switch (symbol) {\n          case ';': {\n            state = 'comment';\n            if (word) {\n              pushAtPath(parsed, path, parseWord(word));\n              word = '';\n            }\n            break;\n          }\n          case '\"': {\n            state = 'string';\n            break;\n          }\n          // still idle\n          case ' ': {\n            break;\n          }\n          // still idle\n          case '\\n': {\n            break;\n          }\n          case '(': {\n            pushAtPath(parsed, path, []);\n            path.push(wordCounter);\n            wordCounter = 0;\n            break;\n          }\n          case ')': {\n            // return to parent path\n            path.pop();\n            // set word counter to parent length\n            wordCounter = lookup(parsed, path).length;\n            break;\n          }\n          case '\\'': {\n            state = 'quote';\n\n            pushAtPath(parsed, path, []);\n            path.push(wordCounter);\n            pushAtPath(parsed, path, 'quote');\n            wordCounter = 1;\n\n            break;\n          }\n          // got some symbol\n          default: {\n            state = 'word';\n            word += symbol;\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'string': {\n        switch (symbol) {\n          case '\"': {\n            state = 'idle';\n\n            pushAtPath(parsed, path, ['string', word]);\n            word = '';\n            wordCounter += 1;\n\n            break;\n          }\n          case '\\n': {\n            word += symbol;\n            break;\n          }\n          default: {\n            word += symbol;\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'comment': {\n        switch (symbol) {\n          case '\\n': {\n            state = 'idle';\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'word': {\n        switch (symbol) {\n          case ';': {\n            state = 'comment';\n\n            pushAtPath(parsed, path, parseWord(word));\n            word = '';\n            wordCounter += 1;\n\n            break;\n          }\n          case '\"': {\n            state = 'string';\n\n            pushAtPath(parsed, path, parseWord(word));\n            word = '';\n            wordCounter += 1;\n            break;\n          }\n          case ' ': {\n            state = 'idle';\n\n            pushAtPath(parsed, path, parseWord(word));\n            word = '';\n            wordCounter += 1;\n\n            break;\n          }\n          case '\\n': {\n            state = 'idle';\n\n            pushAtPath(parsed, path, parseWord(word));\n            word = '';\n            wordCounter += 1;\n\n            break;\n          }\n          case '(': {\n            state = 'idle';\n            // push current word\n            pushAtPath(parsed, path, parseWord(word));\n\n            // process inner list\n            wordCounter += 1;\n            pushAtPath(parsed, path, []);\n            path.push(wordCounter);\n\n            wordCounter = 0;\n            word = '';\n\n            break;\n          }\n          case ')': {\n            state = 'idle';\n\n            pushAtPath(parsed, path, parseWord(word));\n            word = '';\n            // return to parent path\n            path.pop();\n            // set word counter to parent length\n            wordCounter = lookup(parsed, path).length;\n\n            break;\n          }\n          case '\\'': {\n            state = 'quote';\n\n            pushAtPath(parsed, path, []);\n            path.push(wordCounter);\n            pushAtPath(parsed, path, 'quote');\n            wordCounter = 1;\n\n            break;\n          }\n          default: {\n            word += symbol;\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'quote': {\n        switch (symbol) {\n          case ';': {\n            state = 'comment';\n\n            pushAtPath(parsed, path, parseWord(word));\n\n            path.pop();\n            wordCounter = lookup(parsed, path).length;\n            word = '';\n            break;\n          }\n          case '\"': {\n            state = 'string';\n\n            pushAtPath(parsed, path, parseWord(word));\n            path.pop();\n            wordCounter = lookup(parsed, path).length;\n\n            break;\n          }\n          case ' ': {\n            state = 'idle';\n\n            pushAtPath(parsed, path, parseWord(word));\n            path.pop();\n            wordCounter = lookup(parsed, path).length;\n\n            word = '';\n            break;\n          }\n          case '\\n': {\n            state = 'idle';\n\n            pushAtPath(parsed, path, parseWord(word));\n            path.pop();\n            wordCounter = lookup(parsed, path).length;\n\n            word = '';\n            break;\n          }\n          case '(': {\n            state = 'idle';\n            pushAtPath(parsed, path, parseWord(word));\n            path.pop();\n            wordCounter = lookup(parsed, path).length;\n\n            pushAtPath(parsed, path, []);\n            path.push(wordCounter);\n\n            wordCounter = 0;\n\n            break;\n          }\n          case ')': {\n            state = 'idle';\n            pushAtPath(parsed, path, parseWord(word));\n            path.pop();\n            wordCounter = lookup(parsed, path).length;\n\n            word = '';\n            wordCounter = 0;\n\n            break;\n          }\n          case '\\'': {\n            pushAtPath(parsed, path, parseWord(word));\n            path.pop();\n            wordCounter = lookup(parsed, path).length;\n            word = '';\n\n            pushAtPath(parsed, path, []);\n            path.push(wordCounter);\n            pushAtPath(parsed, path, 'quote');\n            wordCounter = 1;\n\n            break;\n          }\n          default: {\n            word += symbol;\n            break;\n          }\n        }\n        break;\n      }\n      default: {\n        throw new Error('Wrong parser state');\n      }\n    }\n\n    symbols = symbols.slice(1);\n    if (symbols.length === 0 && word) {\n      pushAtPath(parsed, path, parseWord(word));\n      word = '';\n    }\n  }\n\n  return parsed;\n}\n","export const isNumber = (exp) => {\n  if (typeof exp === 'number') {\n    return true;\n  }\n};\n\nexport const evalNumber = exp => exp;\n","export const isVariable = exp => typeof exp === 'string' && Number.isNaN(Number(exp));\n","export const isApplication = (exp) => {\n  if (Array.isArray(exp) && exp.length > 0) {\n    return true;\n  }\n};\n\nexport const operator = exp => exp[0];\nexport const operands = ([, ...ops]) => ops;\nexport const isEmptyOperands = ops => ops.length === 0;\nexport const firstOperand = ops => ops[0];\nexport const restOperands = ([, ...ops]) => ops;\n","import {\n  lookupVariableValue,\n  setVariableValue,\n  defineVariable,\n  extendEnvironment,\n} from './environment';\nimport { isNumber, evalNumber } from './expressions/number';\nimport { evalString } from './expressions/string';\nimport { isVariable } from './expressions/variable';\nimport { textOfQuotation } from './expressions/quote';\nimport { assignmentVariable, assignmentValue } from './expressions/assignment';\nimport { definitionVariable, definitionValue } from './expressions/definition';\nimport { beginActions } from './expressions/begin';\nimport { ifPredicate, ifConsequent, ifAlternative } from './expressions/if';\nimport { lambdaParameters, lambdaBody } from './expressions/lambda';\nimport {\n  isApplication,\n  operator,\n  operands,\n  isEmptyOperands,\n  firstOperand,\n  restOperands,\n} from './expressions/application';\nimport {\n  makeProcedure,\n  isPrimitive,\n  isCompound,\n  applyPrimiriveProcedure,\n  procedureBody,\n  procedureParams,\n  procedureEnvironment,\n} from './objects/procedure';\nimport { isTrue } from './objects/boolean';\n\nconst evalAssignment = (exp, env) => setVariableValue(\n  assignmentVariable(exp),\n  evaluate(assignmentValue(exp), env),\n  env,\n);\n\nconst evalDefinition = (exp, env) => defineVariable(\n  definitionVariable(exp),\n  evaluate(definitionValue(exp), env),\n  env,\n);\n\nconst evalSequence = (seq, env) => {\n  if (seq.length === 0) {\n    return null;\n  }\n\n  const loop = (items) => {\n    const [first, ...rest] = items;\n    if (rest.length === 0) {\n      return evaluate(first, env);\n    }\n    evaluate(first, env);\n    return loop(rest);\n  };\n  return loop(seq);\n};\n\nconst evalIf = (exp, env) => {\n  const predicate = ifPredicate(exp);\n  if (isTrue(evaluate(predicate, env))) {\n    return evaluate(ifConsequent(exp), env);\n  }\n  return evaluate(ifAlternative(exp), env);\n};\n\nconst listOfValues = (exps, env) => {\n  if (isEmptyOperands(exps)) {\n    return [];\n  }\n  return [\n    evaluate(firstOperand(exps), env),\n    ...listOfValues(restOperands(exps), env),\n  ];\n};\n\nconst expressionEvaluators = {\n  quote: textOfQuotation,\n  string: evalString,\n  'set!': evalAssignment,\n  define: evalDefinition,\n  if: evalIf,\n  lambda: (exp, env) => makeProcedure(\n    lambdaParameters(exp),\n    lambdaBody(exp),\n    env,\n  ),\n  begin: (exp, env) => evalSequence(beginActions(exp), env),\n};\n\nconst getEvaluator = (exp) => {\n  const type = exp[0];\n  return expressionEvaluators[type] || null;\n};\n\nexport default function evaluate(exp, env) {\n  switch (true) {\n    case (isNumber(exp)): {\n      return evalNumber(exp);\n    }\n    case (isVariable(exp)): {\n      return lookupVariableValue(exp, env);\n    }\n    // dispatch expression on its type\n    case true: {\n      const evaluator = getEvaluator(exp);\n      if (evaluator) {\n        return evaluator(exp, env);\n      }\n    }\n    // case (isCond(exp)): {\n    //   return evalIf(condToIf(exp), env);\n    // }\n    // eslint-disable-next-line no-fallthrough\n    case (isApplication(exp)): {\n      return apply(\n        evaluate(operator(exp), env),\n        listOfValues(operands(exp), env),\n      );\n    }\n    default: {\n      throw new Error(`Unknown expression type: EVAL. ${exp}`);\n    }\n  }\n}\n\nfunction apply(f, args) {\n  if (isPrimitive(f)) {\n    return applyPrimiriveProcedure(f, args);\n  }\n  if (isCompound(f)) {\n    return evalSequence(\n      procedureBody(f),\n      extendEnvironment(\n        procedureParams(f),\n        args,\n        procedureEnvironment(f),\n      ),\n    );\n  }\n  throw new Error(`Unknown procedure type: APPLY. ${f}`);\n}\n","export const isQuoted = (exp) => {\n  if (Array.isArray(exp) && exp[0] === 'quote') {\n    return true;\n  }\n  return false;\n};\n\nexport const textOfQuotation = exp => exp[1];\n","export const isString = (exp) => {\n  if (Array.isArray(exp) && exp[0] === 'string') {\n    return true;\n  }\n};\n\nexport const evalString = exp => exp[1];\n","export const isAssignment = (exp) => {\n  if (Array.isArray(exp) && exp[0] === 'set!') {\n    return true;\n  }\n};\n\nexport const assignmentVariable = exp => exp[1];\nexport const assignmentValue = exp => exp[2];\n","export const isDefinition = (exp) => {\n  if (Array.isArray(exp) && exp[0] === 'define') {\n    return true;\n  }\n};\n\nexport const definitionVariable = exp => exp[1];\nexport const definitionValue = exp => exp[2];\n","export const isIf = (exp) => {\n  if (Array.isArray(exp) && exp[0] === 'if') {\n    return true;\n  }\n};\n\nexport const ifPredicate = exp => exp[1];\nexport const ifConsequent = exp => exp[2];\nexport const ifAlternative = exp => exp[3] || 'false';\n\nexport const makeIf = (predicate, consequent, alternative = 'false') => ([\n  'if',\n  predicate,\n  consequent,\n  alternative,\n]);\n","export const isLambda = (exp) => {\n  if (Array.isArray(exp) && exp[0] === 'lambda') {\n    return true;\n  }\n};\n\nexport const lambdaParameters = exp => exp[1];\nexport const lambdaBody = ([,, ...body]) => body;\n","export const isBegin = (exp) => {\n  if (Array.isArray(exp) && exp[0] === 'begin') {\n    return true;\n  }\n};\n\nexport const beginActions = ([, ...actions]) => actions;\nexport const makeBegin = (...exps) => (['begin', ...exps]);\n","import setupEnvironment from './config/setupEnvironment';\nimport stringToAst from './stringToAst';\nimport evaluate from './evaluate';\n\nconst env = setupEnvironment();\n\nexport default function run(code) {\n  const ast = stringToAst(code);\n  return evaluate(ast, env);\n}\n","import {\n  primitiveProcedureNames,\n  primitiveProcedureObjects,\n} from './primitiveProcedures';\nimport { extendEnvironment, theEmptyEnvironment, defineVariable } from '../environment';\nimport { True, False } from '../objects/boolean';\nimport { theEmptyList } from '../objects/list';\n\nexport default function setupEnvironment() {\n  const initialEnvironment = extendEnvironment(\n    primitiveProcedureNames(),\n    primitiveProcedureObjects(),\n    theEmptyEnvironment,\n  );\n  defineVariable('true', True, initialEnvironment);\n  defineVariable('false', False, initialEnvironment);\n  defineVariable('nil', theEmptyList, initialEnvironment);\n  return initialEnvironment;\n}\n","import React, {\n  useState,\n  useCallback,\n  useRef,\n  useEffect,\n  useMemo,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport MonacoEditor from 'react-monaco-editor';\nimport { Resizable } from 're-resizable';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\n\nimport run from './evaluator';\n\nconst options = {\n  selectOnLineNumbers: true,\n};\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    height: 60,\n    backgroundColor: theme.palette.primary.main,\n  },\n  runButton: {\n    marginRight: theme.spacing(2),\n  },\n  main: {\n    display: 'flex',\n    height: 'calc(100vh - 120px)',\n  },\n  ide: {\n    boxSizing: 'border-box',\n    height: '100%',\n    minWidth: '10%',\n    borderRight: [[6, 'solid', '#d5d5d5']],\n    padding: theme.spacing(1),\n  },\n  output: {\n    minWidth: '10%',\n    boxSizing: 'border-box',\n    padding: [[theme.spacing(1), theme.spacing(2)]],\n  },\n  footer: {\n    height: 60,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nexport default function Wrapper() {\n  const classes = useStyles();\n\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [outputSize] = useState({ width: '60%', height: '100%' });\n\n  const editorRef = useRef(null);\n  const enabledResize = useMemo(() => ({ right: true }), []);\n\n  const editorDidMount = useCallback((editor) => {\n    editorRef.current = editor;\n    editor.focus();\n  }, [editorRef]);\n\n  const adjustEditor = useCallback(() => {\n    if (editorRef.current) {\n      editorRef.current.layout();\n    }\n  }, []);\n\n  const onResizeOutput = useCallback(debounce(adjustEditor), [editorRef]);\n\n  const onRunCode = useCallback(() => {\n    console.log(code);\n    try {\n      setOutput(run(code));\n    } catch (e) {\n      setOutput(e.message);\n    }\n  }, [code, setOutput]);\n\n  useEffect(() => {\n    window.addEventListener('resize', adjustEditor);\n    return () => {\n      document.removeEventListener('resize', adjustEditor);\n    };\n  }, []);\n\n  return (\n    <>\n      <AppBar position=\"static\" className={classes.header}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.runButton}\n            onClick={onRunCode}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <PlayArrow />\n          </IconButton>\n          <Typography variant=\"h4\" className={classes.title}>\n            Eval Scheme\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.main}>\n        <Resizable\n          className={classes.ide}\n          enable={enabledResize}\n          minWidth=\"10%\"\n          maxWidth=\"90%\"\n          defaultSize={outputSize}\n          onResize={onResizeOutput}\n        >\n          <MonacoEditor\n            width=\"100%\"\n            height=\"100%\"\n            language=\"scheme\"\n            theme=\"vs-light\"\n            value={code}\n            options={options}\n            onChange={setCode}\n            editorDidMount={editorDidMount}\n          />\n        </Resizable>\n        <div className={classes.output}>\n          Output:\n          {output}\n        </div>\n      </main>\n      <footer className={classes.footer} />\n    </>\n  );\n}\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Wrapper from './Wrapper';\n\nconst customTheme = createMuiTheme({});\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <Wrapper />\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}